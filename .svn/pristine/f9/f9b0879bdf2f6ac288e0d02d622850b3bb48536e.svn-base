CD.AccidentForm = {
    selectedFilePath: null,
    selecedFile: null,
    selectedId: null,
    selectedCaseId: null,
    oVehicleTable: null,
    oWitnessTable: null,
    oChargeTable: null,
    oOccupantTable: null,
    selectedItem: null,
    selectedReport: null,
    addUpdateStatus: 1,
    init: function() {
        $('#selectedcdformfile').change(function(e) {
            // assign selected file path to selectedFilePath variable 
            CD.AccidentForm.selectedFilePath = this.value;
            CD.AccidentForm.selectedFile = $("#selectedcdformfile")[0].files[0];
            $("#SelectedFormpath").html(this.value);
        });

        $("#btn_OpenSyncDlg").click(function() {
            //Helpers.showNotificationModal("Login Error", "Your login has expired. Please log in again to continue.");
            Helpers.showSyncFormDataModal();
        });

        $("#btn_OpenSyncDlg_Edit").click(function() {
            //Helpers.showNotificationModal("Login Error", "Your login has expired. Please log in again to continue.");
            Helpers.showSyncFormDataModal();
        });

        // https://stackoverflow.com/questions/20052839/cant-bind-events-to-inputs-within-jquery-steps-wizard 
        $("#reloadFormBtn").click(function() {
                Helpers.handleFileSelect(CD.AccidentForm.selectedFile);
            }),

            $('#btn_submitAccdForm').click(function() {

                if (Offline.state === 'down') {
                    //Offline.check();
                    Helpers.showNotificationModal("Create Error", "There is no internet connection. Please try again!");
                    return false;
                } else {
                    //Do ajax call for token
                    Promise.all([
                        CD.services.createInvestigation("accidentForm")
                    ]).then(function success(values) {

                        var reportId = values[0];
                        Helpers.showSaveStatusModal("Sync Investigation Report",
                            "The Investigation report " + reportId + " has been created successfully.",
                            function() {
                                window.open(siteBaseUrl + "Home/Index", "_self");
                            },
                            function() {
                                //Do nothing
                            });
                    });
                    return true;
                }
            });

        $('#btn_submitAccdForm_Edit').click(function() {

            if (Offline.state === 'down') {
                //Offline.check();
                var formData = $('form#accidentForm_Edit').serializeArray();
                var formJSON = Helpers.serializeObject(formData);
                /*Helpers.saveJSON2Txt("C:/testbaltimoreCity.txt", formJSON);
                download(formJSON, "BaltimoreCity.txt", "text/plain");*/

                var reportId = formData[0].value;
                var localforageId = 0;
                if (reportId > 0) {
                    localforageId = Helpers.getlocalforageReportKey(reportId);
                    var formData = $('form#accidentForm_Edit').serializeArray();
                    //Save report info back to localforage
                    localforage.setItem(localforageId, {
                        form: formData,
                        reportID: reportId
                    }).then(
                        function success() {},
                        function failure(err) {}
                    );
                }
                Helpers.showNotificationModal("Internet Offline", "There is no internet connection, the report fails to be saved. Please try again when there is internet connection.");

            } else {
                Promise.all([
                    CD.services.editInvestigation("accidentForm_Edit")
                ]).then(function success(values) {
                    var reportId = values[0];
                    Helpers.showNotificationModal("Sync Investigation Report",
                        "The Investigation report " + reportId + " has been synced successfully.");
                    //window.open(siteBaseUrl + "Home/Index", "_self");
                }, function failure(err) {
                    Helpers.showNotificationModal("Report Save failed", "An error occurred when saving data to the server. Please check your internet connection. " + err);

                });
                return true;
            }
        });

        var form = $("#accidentForm").show();
        CD.AccidentForm.fnInitMultiStepForm();
        CD.AccidentForm.InitReportCaseObj();
    },
    fnInitReportInfo: function() {
        // checkbox change event bind 
        $('input[type="checkbox"]').change(function() {
            this.value = (Number(this.checked));
        });
    },
    fnInitMultiStepForm: function() {
        var navListItems = $('div.setup-panel div a'),
            allWells = $('.setup-content'),
            allNextBtn = $('.nextBtn');

        allWells.hide();

        navListItems.click(function(e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                $item = $(this);

            //if (!$item.hasClass('disabled')) {
            navListItems.removeClass('btn-success').addClass('btn-default');
            $item.addClass('btn-success');
            allWells.hide();
            $target.show();
            $target.find('input:eq(0)').focus();
            var step = $target[0].id.split("-")[1];
            CD.AccidentForm.fnUpdateProgress(step);
            //}
        });

        allNextBtn.click(function() {
            var curStep = $(this).closest(".setup-content"),
                curStepBtn = curStep.attr("id"),
                nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                curInputs = curStep.find("input[type='text'],input[type='url']"),
                isValid = true;

            $(".form-group").removeClass("has-error");
            for (var i = 0; i < curInputs.length; i++) {
                if (!curInputs[i].validity.valid) {
                    isValid = false;
                    $(curInputs[i]).closest(".form-group").addClass("has-error");
                }
            }

            if (isValid) nextStepWizard.removeAttr('disabled').trigger('click');
        });

        $('div.setup-panel div a.btn-success').trigger('click');

    },

    fnUpdateProgress: function(step) {
        var $percent = (step / 6) * 100;
        $('.progress-bar').css({
            width: $percent + '%'
        });
    },

    // To do - Field Validation for Accident Report Update and Create 
    fnCreateValidationMsg: function(step) {
        var Error = "The Field is required!"
        var Warn = "Maximum of 50 characters allowed!"
        var Name = $("#keyword").val();

        if (Name == '') {
            $("#accidentForm_validation").html(Error);
        } else if (Name.length > 50) {
            $("#accidentForm_validation").html(Warn);
        } else {
            $("#accidentForm_validation").html("");
        }

        if (Name != '' && Name.length < 50) {
            return true;
        } else {
            return false;
        }
    },

    fnPopulateVehicleForm: function(Id) {
        if (Id == null) {
            Helpers.showNotificationModal("Error", "Please make sure that a specific row has been selected.");
        } else {
            $("#mdl_vehicleEdit").modal();
            $("#mdl_vehicleLabel").html("Edit Vehicle");
            Helpers.getReportChildByType(1, Id);
            CD.AccidentForm.fnPopulateVehicleFields(CD.AccidentForm.selectedItem);
        }
    },

    fnPopulateVehicleFields: function(selectedItem) {
        if (selectedItem != null) {
            //$("#chargeEdit_SummonNo").val(selectedItem.Summons_No);
            //$("#chargeEdit_ChargeAmount").val(selectedItem.ChargeAmount);
            //$("#chargeEdit_CityEmplCharge").val(selectedItem.CityEmpl_Charge);
            //$("#chargeEdit_TrialTime").val(selectedItem.Trial_Time);
        }
    },

    fnAddVehicleItem: function() {
        var id = Helpers.findMaxChildrenID(2) + 1;
        var CaseId = CD.AccidentForm.selectedReport.accidentReport.CaseId;
        //var charge = null;
        //if (id >= 0 && CaseId >= 0) {
        //    charge = {
        //        CHARGEId: id,
        //        CaseId: CaseId,
        //        CityEmpl_Charge: $("#chargeEdit_CityEmplCharge").val(),
        //        ChargeAmount: $("#chargeEdit_ChargeAmount").val(),
        //        Summons_No: $("#chargeEdit_SummonNo").val(),
        //        Trial_Time: $("#chargeEdit_TrialTime").val()
        //    };
        //    Helpers.addReportChildByType(2, charge);
        //    $("#mdl_chargeEdit").modal("hide");
        //}

    },

    fnUpdateVehicleItem: function() {
        //CD.AccidentForm.selectedItem.Summons_No = $("#chargeEdit_SummonNo").val();
        //CD.AccidentForm.selectedItem.ChargeAmount = $("#chargeEdit_ChargeAmount").val();
        //CD.AccidentForm.selectedItem.CityEmpl_Charge = $("#chargeEdit_CityEmplCharge").val();
        //CD.AccidentForm.selectedItem.Trial_Time = $("#chargeEdit_TrialTime").val();
        //Helpers.updateReportChildByType(2, CD.AccidentForm.selectedItem);
        //$("#mdl_chargeEdit").modal("hide");
    },


    fnPopulateChargeForm: function(Id) {
        if (Id == null) {
            Helpers.showNotificationModal("Error", "Please make sure that a specific row has been selected.");
        } else {
            $("#mdl_chargeEdit").modal();
            $("#mdl_chargeLabel").html("Edit Charge");
            Helpers.getReportChildByType(2, Id);
            CD.AccidentForm.fnPopulateChargeFields(CD.AccidentForm.selectedItem);
        }
    },

    fnPopulateChargeFields: function(selectedItem) {
        if (selectedItem != null) {
            $("#chargeEdit_SummonNo").val(selectedItem.Summons_No);
            $("#chargeEdit_ChargeAmount").val(selectedItem.ChargeAmount);
            $("#chargeEdit_CityEmplCharge").val(selectedItem.CityEmpl_Charge);
            $("#chargeEdit_TrialTime").val(selectedItem.Trial_Time);
        }
    },

    fnAddChargeItem: function() {
        var id = Helpers.findMaxChildrenID(2) + 1;
        var CaseId = CD.AccidentForm.selectedReport.accidentReport.CaseId;
        var charge = null;
        if (id >= 0 && CaseId >= 0) {
            charge = {
                CHARGEId: id,
                CaseId: CaseId,
                CityEmpl_Charge: $("#chargeEdit_CityEmplCharge").val(),
                ChargeAmount: $("#chargeEdit_ChargeAmount").val(),
                Summons_No: $("#chargeEdit_SummonNo").val(),
                Trial_Time: $("#chargeEdit_TrialTime").val()
            };
            Helpers.addReportChildByType(2, charge);
            $("#mdl_chargeEdit").modal("hide");
        }

    },
    fnUpdateChargeItem: function() {
        CD.AccidentForm.selectedItem.Summons_No = $("#chargeEdit_SummonNo").val();
        CD.AccidentForm.selectedItem.ChargeAmount = $("#chargeEdit_ChargeAmount").val();
        CD.AccidentForm.selectedItem.CityEmpl_Charge = $("#chargeEdit_CityEmplCharge").val();
        CD.AccidentForm.selectedItem.Trial_Time = $("#chargeEdit_TrialTime").val();
        Helpers.updateReportChildByType(2, CD.AccidentForm.selectedItem);
        $("#mdl_chargeEdit").modal("hide");
    },

    fnPopulateWitnessForm: function(Id) {
        if (Id == null) {
            Helpers.showNotificationModal("Error", "Please make sure that a specific row has been selected.");
        } else {
            $("#mdl_witnessEdit").modal();
            $("#mdl_witnessLabel").html("Edit Witness");        
            Helpers.getReportChildByType(3, Id);
            CD.AccidentForm.fnPopulateWitnessFields(CD.AccidentForm.selectedItem);
        }
    },
    
    fnPopulateWitnessFields: function (selectedItem) {
        if (selectedItem != null) {
            //$("#chargeEdit_SummonNo").val(selectedItem.Summons_No);
            //$("#chargeEdit_ChargeAmount").val(selectedItem.ChargeAmount);
            //$("#chargeEdit_CityEmplCharge").val(selectedItem.CityEmpl_Charge);
            //$("#chargeEdit_TrialTime").val(selectedItem.Trial_Time);
        }
    },

    fnAddWitnessItem: function () {
        var id = Helpers.findMaxChildrenID(2) + 1;
        var CaseId = CD.AccidentForm.selectedReport.accidentReport.CaseId;
        //var charge = null;
        //if (id >= 0 && CaseId >= 0) {
        //    charge = {
        //        CHARGEId: id,
        //        CaseId: CaseId,
        //        CityEmpl_Charge: $("#chargeEdit_CityEmplCharge").val(),
        //        ChargeAmount: $("#chargeEdit_ChargeAmount").val(),
        //        Summons_No: $("#chargeEdit_SummonNo").val(),
        //        Trial_Time: $("#chargeEdit_TrialTime").val()
        //    };
        //    Helpers.addReportChildByType(2, charge);
        //    $("#mdl_chargeEdit").modal("hide");
        //}

    },

    fnUpdateWitnessItem: function () {
        //CD.AccidentForm.selectedItem.Summons_No = $("#chargeEdit_SummonNo").val();
        //CD.AccidentForm.selectedItem.ChargeAmount = $("#chargeEdit_ChargeAmount").val();
        //CD.AccidentForm.selectedItem.CityEmpl_Charge = $("#chargeEdit_CityEmplCharge").val();
        //CD.AccidentForm.selectedItem.Trial_Time = $("#chargeEdit_TrialTime").val();
        //Helpers.updateReportChildByType(2, CD.AccidentForm.selectedItem);
        //$("#mdl_chargeEdit").modal("hide");
    },

    fnPopulateOccupantForm: function(Id) {
        if (Id == null) {
            Helpers.showNotificationModal("Error", "Please make sure that a specific row has been selected.");
        } else {
            $("#mdl_occupantEdit").modal();
            $("#mdl_occupantLabel").html("Edit Occupant");
            Helpers.getReportChildByType(4, Id);
            CD.AccidentForm.fnPopulateOccupantFields(CD.AccidentForm.selectedItem);
        }
    },

    fnPopulateOccupantFields: function (selectedItem) {
        if (selectedItem != null) {
            //$("#chargeEdit_SummonNo").val(selectedItem.Summons_No);
            //$("#chargeEdit_ChargeAmount").val(selectedItem.ChargeAmount);
            //$("#chargeEdit_CityEmplCharge").val(selectedItem.CityEmpl_Charge);
            //$("#chargeEdit_TrialTime").val(selectedItem.Trial_Time);
        }
    },

    fnAddOccupantItem: function () {
        var id = Helpers.findMaxChildrenID(2) + 1;
        var CaseId = CD.AccidentForm.selectedReport.accidentReport.CaseId;
        //var charge = null;
        //if (id >= 0 && CaseId >= 0) {
        //    charge = {
        //        CHARGEId: id,
        //        CaseId: CaseId,
        //        CityEmpl_Charge: $("#chargeEdit_CityEmplCharge").val(),
        //        ChargeAmount: $("#chargeEdit_ChargeAmount").val(),
        //        Summons_No: $("#chargeEdit_SummonNo").val(),
        //        Trial_Time: $("#chargeEdit_TrialTime").val()
        //    };
        //    Helpers.addReportChildByType(2, charge);
        //    $("#mdl_chargeEdit").modal("hide");
        //}

    },

    fnUpdateOccupantItem: function () {
        //CD.AccidentForm.selectedItem.Summons_No = $("#chargeEdit_SummonNo").val();
        //CD.AccidentForm.selectedItem.ChargeAmount = $("#chargeEdit_ChargeAmount").val();
        //CD.AccidentForm.selectedItem.CityEmpl_Charge = $("#chargeEdit_CityEmplCharge").val();
        //CD.AccidentForm.selectedItem.Trial_Time = $("#chargeEdit_TrialTime").val();
        //Helpers.updateReportChildByType(2, CD.AccidentForm.selectedItem);
        //$("#mdl_chargeEdit").modal("hide");
    },

    InitVehcileSectionEvents: function() {
        CD.AccidentForm.oVehicleTable = $('#VehiclesTable').dataTable({
            "aaSorting": [
                [1, "asc"]
            ],
            "pagingType": "simple",
            "bPaginate": true,
            "info": false,
            "columnDefs": [{
                "targets": [0],
                "visible": false
            }]
        });

        $('#VehiclesTable tbody').on('click', 'tr', function() {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            } else {
                CD.AccidentForm.oVehicleTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        // vehicle events
        //$("#btn_saveCharge_Edit").click(function() {
        //    Helpers.showSaveStatusModal("Save Changes", "Do you want to save the changes to the local work data?",
        //        function() {
        //            if (CD.AccidentForm.addUpdateStatus == 1) {
        //                CD.AccidentForm.fnAddChargeItem();
        //            } else if (CD.AccidentForm.addUpdateStatus == 2) {
        //                CD.AccidentForm.fnUpdateChargeItem();
        //            }
        //            CD.AccidentForm.reDrawDatatable(2);
        //        },
        //        function() {
        //            //Do nothing
        //        });
        //});

        // vehicle events
        $("#btn_Editvehicle_Add").click(function() {
            Helpers.fnClearFormFields("#vehicleEditSection");
            $("#mdl_vehicleEdit").modal();
            $("#mdl_vehicleLabel").html("Create Vehicle");
            CD.AccidentForm.addUpdateStatus = 1;
        });

        $("#btn_Editvehicle_Edit").click(function() {
            Helpers.fnClearFormFields("#vehicleEditSection");
            var Id = Helpers.getSelectedRowId("#VehiclesTable");
            CD.AccidentForm.fnPopulateVehicleForm(Id);
            CD.AccidentForm.addUpdateStatus = 2;
        });

        $("#btn_Editvehicle_Del").click(function() {
            var tbl = $('#VehiclesTable').DataTable();
            var $row = Helpers.findSelectedRow(tbl);
            if ($row == null) {
                return;
            }

            Helpers.showSaveStatusModal("Delete Vehicle", "You will delete the Vehicle from the local work data.",
                function() {
                    tbl.row($row)
                        .remove()
                        .draw();
                    // delete selected vehicle
                    var selectedId = Helpers.getSelectedRowId('#VehiclesTable');
                    Helpers.delReportChildByType(1, selectedId);
                    CD.AccidentForm.reDrawDatatable(1);
                },
                function() {
                    //Do nothing
                });
        });
    },

    InitChargeSectionEvents: function() {
        CD.AccidentForm.oChargeTable = $('#ChargesTable').dataTable({
            "aaSorting": [
                [1, "asc"]
            ],
            "pagingType": "simple",
            "bPaginate": true,
            "info": false,
            "columnDefs": [{
                "targets": [0],
                "visible": false
            }]
        });

        $('#ChargesTable tbody').on('click', 'tr', function() {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            } else {
                CD.AccidentForm.oChargeTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        // charge events
        $("#btn_saveCharge_Edit").click(function() {
            Helpers.showSaveStatusModal("Save Changes", "Do you want to save the changes to the local work data?",
                function() {
                    if (CD.AccidentForm.addUpdateStatus == 1) {
                        CD.AccidentForm.fnAddChargeItem();
                    } else if (CD.AccidentForm.addUpdateStatus == 2) {
                        CD.AccidentForm.fnUpdateChargeItem();
                    }
                    CD.AccidentForm.reDrawDatatable(2);

                },
                function() {
                    //Do nothing
                });
        });

        $("#btn_Editcharge_Add").click(function() {
            Helpers.fnClearFormFields("#chargeEditSection");
            $("#mdl_chargeEdit").modal();
            $("#mdl_chargeLabel").html("Create Charge");
            CD.AccidentForm.addUpdateStatus = 1;
        });

        $("#btn_Editcharge_Edit").click(function() {
            Helpers.fnClearFormFields("#chargeEditSection");
            var Id = Helpers.getSelectedRowId("#ChargesTable");
            CD.AccidentForm.fnPopulateChargeForm(Id);
            CD.AccidentForm.addUpdateStatus = 2;
        });

        $("#btn_EditCharge_Delete").click(function() {
            var tbl = $('#ChargesTable').DataTable();
            var $row = Helpers.findSelectedRow(tbl);
            if ($row == null) {
                return;
            }

            Helpers.showSaveStatusModal("Delete Charge", "You will delete the charge from the local work data.",
                function() {
                    var selectedId = Helpers.getSelectedRowId('#ChargesTable');
                    Helpers.delReportChildByType(2, selectedId);
                    CD.AccidentForm.reDrawDatatable(2);
                },
                function() {
                    //Do nothing
                });
        });
    },

    InitWitnessSectionEvents: function() {
        CD.AccidentForm.oWitnessTable = $('#WitnessesTable').dataTable({
            "aaSorting": [
                [1, "asc"]
            ],
            "pagingType": "simple",
            "bPaginate": true,
            "info": false,
            "columnDefs": [{
                "targets": [0],
                "visible": false
            }]
        });

        $('#WitnessesTable tbody').on('click', 'tr', function() {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            } else {
                CD.AccidentForm.oWitnessTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        // witness events
        //$("#btn_saveCharge_Edit").click(function() {
        //    Helpers.showSaveStatusModal("Save Changes", "Do you want to save the changes to the local work data?",
        //        function() {
        //            if (CD.AccidentForm.addUpdateStatus == 1) {
        //                CD.AccidentForm.fnAddChargeItem();
        //            } else if (CD.AccidentForm.addUpdateStatus == 2) {
        //                CD.AccidentForm.fnUpdateChargeItem();
        //            }
        //            CD.AccidentForm.reDrawDatatable(2);
        //        },
        //        function() {
        //            //Do nothing
        //        });
        //});

        // witness events
        $("#btn_Editwitness_Add").click(function() {
            Helpers.fnClearFormFields("#witnessEditSection");
            $("#mdl_vehicleEdit").modal();
            $("#mdl_witnessLabel").html("Create Witness");
            CD.AccidentForm.addUpdateStatus = 1;
        });

        $("#btn_Editwitness_Edit").click(function() {
            Helpers.fnClearFormFields("#witnessEditSection");
            var Id = Helpers.getSelectedRowId("#WitnessesTable");
            CD.AccidentForm.fnPopulateWitnessForm(Id);
            CD.AccidentForm.addUpdateStatus = 2;
        });

        $("#btn_Editwitness_Del").click(function() {
            var tbl = $('#WitnessesTable').DataTable();
            var $row = Helpers.findSelectedRow(tbl);
            if ($row == null) {
                return;
            }
            Helpers.showSaveStatusModal("Delete Witness", "You will delete the Witness from the local work data.",
                function() {
                    tbl.row($row)
                        .remove()
                        .draw();
                    // delete selected witness
                    var selectedId = Helpers.getSelectedRowId('#WitnessesTable');
                    Helpers.delReportChildByType(3, selectedId);
                    CD.AccidentForm.reDrawDatatable(3);
                },
                function() {
                    //Do nothing
                });
        });
    },

    InitOccupantSectionEvents: function() {
        CD.AccidentForm.oOccupantTable = $('#OccupantsTable').dataTable({
            "aaSorting": [
                [1, "asc"]
            ],
            "pagingType": "simple",
            "bPaginate": true,
            "info": false,
            "columnDefs": [{
                "targets": [0],
                "visible": false
            }]
        });

        $('#OccupantsTable tbody').on('click', 'tr', function() {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            } else {
                CD.AccidentForm.oOccupantTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        // witness events
        //$("#btn_saveCharge_Edit").click(function() {
        //    Helpers.showSaveStatusModal("Save Changes", "Do you want to save the changes to the local work data?",
        //        function() {
        //            if (CD.AccidentForm.addUpdateStatus == 1) {
        //                CD.AccidentForm.fnAddChargeItem();
        //            } else if (CD.AccidentForm.addUpdateStatus == 2) {
        //                CD.AccidentForm.fnUpdateChargeItem();
        //            }
        //            CD.AccidentForm.reDrawDatatable(2);
        //        },
        //        function() {
        //            //Do nothing
        //        });
        //});

        // occupant events
        $("#btn_Editoccupant_Add").click(function() {
            Helpers.fnClearFormFields("#occupantEditSection");
            $("#mdl_occupantEdit").modal();
            $("#mdl_occupantLabel").html("Create Occupant");
        });

        $("#btn_Editoccupant_Edit").click(function() {
            Helpers.fnClearFormFields("#occupantEditSection");
            var Id = Helpers.getSelectedRowId("#OccupantsTable");
            CD.AccidentForm.fnPopulateOccupantForm(Id);
        });

        $("#btn_Editoccupant_Del").click(function() {
            var tbl = $('#OccupantsTable').DataTable();
            var $row = Helpers.findSelectedRow(tbl);
            if ($row == null) {
                return;
            }
            Helpers.showSaveStatusModal("Delete Occupant", "You will delete the Occupant from the local work data.",
                function() {
                    tbl.row($row)
                        .remove()
                        .draw();
                    // delete selected occupant
                    var selectedId = Helpers.getSelectedRowId('#OccupantsTable');
                    Helpers.delReportChildByType(4, selectedId);
                    CD.AccidentForm.reDrawDatatable(4);
                },
                function() {
                    //Do nothing
                });
        });
    },

    InitReportCaseObj: function() {
        var temp = localforage.getItem('selectedReport', function(err, value) {
            var reportData = value;
            if (value == null) {
                var url = window.location.href;
                var parameterStr = url.substring(url.indexOf('?') + 1);
                var ReportCaseID = parameterStr.split("=")[1];
                if (ReportCaseID != null && ReportCaseID != "") {
                    Promise.all([
                    CD.services.getReportById(ReportCaseID)
                    ]).then(function success(values) {
                        localforage.setItem("selectedReport", values[0]).then(
                            function success() {
                                CD.AccidentForm.selectedReport = value;
                                CD.AccidentForm.InitVehcileSectionEvents();
                                CD.AccidentForm.InitChargeSectionEvents();
                                CD.AccidentForm.InitWitnessSectionEvents();
                                CD.AccidentForm.InitOccupantSectionEvents();
                            },
                            function failure(err) { }
                        )
                    });
                }           
            }

            CD.AccidentForm.selectedReport = value;
            CD.AccidentForm.InitVehcileSectionEvents();
            CD.AccidentForm.InitChargeSectionEvents();
            CD.AccidentForm.InitWitnessSectionEvents();
            CD.AccidentForm.InitOccupantSectionEvents();

        });
    },
    reDrawDatatable: function(Type) {
        var ind, len;
        var reportJSON = CD.AccidentForm.selectedReport;
        switch (Type) {
            //get vehicles              
            case 1:
                var t = $("#VehiclesTable").DataTable();
                // clear the table first
                t.clear().draw();
                var res = [];
                for (ind = 0, len = reportJSON.vehicles.length; ind < len; ind++) {
                    var a = reportJSON.vehicles[ind];
                    res.push([a.VehicleId, reportJSON.accidentReport.CaseNumber, a.CityDriver, a.Driver_FirstName, a.Driver_lastName, a.Driver_Sex, a.DriverLicense_Number, a.Driver_County]);
                }

                if (res.length > 0) {
                    t.rows.add(res).draw();
                }
                break;
                //get charges
            case 2:
                var t = $("#ChargesTable").DataTable();
                // clear the table first
                t.clear().draw();
                var res = [];
                for (ind = 0, len = reportJSON.charges.length; ind < len; ind++) {
                    var a = reportJSON.charges[ind];
                    res.push([a.CHARGEId, reportJSON.accidentReport.CaseNumber, a.CityEmpl_Charge, a.Summons_No, a.Trial_Time]);
                }

                if (res.length > 0) {
                    t.rows.add(res).draw();
                }
                break;
                //get witnesses
            case 3:
                var t = $("#WitnessesTable").DataTable();
                // clear the table first
                t.clear().draw();
                var res = [];
                for (ind = 0, len = reportJSON.witnesses.length; ind < len; ind++) {
                    var a = reportJSON.witnesses[ind];
                    res.push([a.WitnessId, reportJSON.accidentReport.CaseNumber, a.WitnessName, a.WitnessPhone, a.WitnessAddress]);
                }

                if (res.length > 0) {
                    t.rows.add(res).draw();
                }
                break;
                //get occupants
            case 4:
                var t = $("#OccupantsTable").DataTable();
                // clear the table first
                t.clear().draw();
                var res = [];
                for (ind = 0, len = reportJSON.occupants.length; ind < len; ind++) {
                    var a = reportJSON.occupants[ind];
                    res.push([a.OccupantId, reportJSON.accidentReport.CaseNumber, a.Occupant_FirstName, a.Occupant_LastName, a.OccupantAddress]);
                }

                if (res.length > 0) {
                    t.rows.add(res).draw();
                }

        }
    },
    removeWarning: function() {}
}