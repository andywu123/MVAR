//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FieldToolData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OSTFieldEntities : DbContext
    {
        public OSTFieldEntities()
            : base("name=OSTFieldEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AccidentReport> AccidentReports { get; set; }
        public virtual DbSet<Charge> Charges { get; set; }
        public virtual DbSet<Occupant> Occupants { get; set; }
        public virtual DbSet<Vehicle> Vehicles { get; set; }
        public virtual DbSet<Witness> Witnesses { get; set; }
    
        public virtual ObjectResult<Nullable<int>> Charges_InsertUpdate(Nullable<int> chargeId, Nullable<int> caseId, Nullable<decimal> cityEmpl_Charge, Nullable<decimal> charge, Nullable<int> summons_No)
        {
            var chargeIdParameter = chargeId.HasValue ?
                new ObjectParameter("ChargeId", chargeId) :
                new ObjectParameter("ChargeId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var cityEmpl_ChargeParameter = cityEmpl_Charge.HasValue ?
                new ObjectParameter("CityEmpl_Charge", cityEmpl_Charge) :
                new ObjectParameter("CityEmpl_Charge", typeof(decimal));
    
            var chargeParameter = charge.HasValue ?
                new ObjectParameter("Charge", charge) :
                new ObjectParameter("Charge", typeof(decimal));
    
            var summons_NoParameter = summons_No.HasValue ?
                new ObjectParameter("Summons_No", summons_No) :
                new ObjectParameter("Summons_No", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Charges_InsertUpdate", chargeIdParameter, caseIdParameter, cityEmpl_ChargeParameter, chargeParameter, summons_NoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FieldReportCase_InsertUpdate(Nullable<int> caseId, string driverSig_URL, string supervisorSig_URL, Nullable<System.DateTime> driverSign_Time, Nullable<int> supervisorScene_Response, Nullable<int> safetyOfficerScene_Reponse, string safetyOfficerSig_URL, Nullable<int> photoTaken, string weatherCondition, string accidentDesc, string photo_Storedpath, string intsSketch_StoredPath)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var driverSig_URLParameter = driverSig_URL != null ?
                new ObjectParameter("DriverSig_URL", driverSig_URL) :
                new ObjectParameter("DriverSig_URL", typeof(string));
    
            var supervisorSig_URLParameter = supervisorSig_URL != null ?
                new ObjectParameter("SupervisorSig_URL", supervisorSig_URL) :
                new ObjectParameter("SupervisorSig_URL", typeof(string));
    
            var driverSign_TimeParameter = driverSign_Time.HasValue ?
                new ObjectParameter("DriverSign_Time", driverSign_Time) :
                new ObjectParameter("DriverSign_Time", typeof(System.DateTime));
    
            var supervisorScene_ResponseParameter = supervisorScene_Response.HasValue ?
                new ObjectParameter("SupervisorScene_Response", supervisorScene_Response) :
                new ObjectParameter("SupervisorScene_Response", typeof(int));
    
            var safetyOfficerScene_ReponseParameter = safetyOfficerScene_Reponse.HasValue ?
                new ObjectParameter("SafetyOfficerScene_Reponse", safetyOfficerScene_Reponse) :
                new ObjectParameter("SafetyOfficerScene_Reponse", typeof(int));
    
            var safetyOfficerSig_URLParameter = safetyOfficerSig_URL != null ?
                new ObjectParameter("SafetyOfficerSig_URL", safetyOfficerSig_URL) :
                new ObjectParameter("SafetyOfficerSig_URL", typeof(string));
    
            var photoTakenParameter = photoTaken.HasValue ?
                new ObjectParameter("PhotoTaken", photoTaken) :
                new ObjectParameter("PhotoTaken", typeof(int));
    
            var weatherConditionParameter = weatherCondition != null ?
                new ObjectParameter("WeatherCondition", weatherCondition) :
                new ObjectParameter("WeatherCondition", typeof(string));
    
            var accidentDescParameter = accidentDesc != null ?
                new ObjectParameter("AccidentDesc", accidentDesc) :
                new ObjectParameter("AccidentDesc", typeof(string));
    
            var photo_StoredpathParameter = photo_Storedpath != null ?
                new ObjectParameter("Photo_Storedpath", photo_Storedpath) :
                new ObjectParameter("Photo_Storedpath", typeof(string));
    
            var intsSketch_StoredPathParameter = intsSketch_StoredPath != null ?
                new ObjectParameter("IntsSketch_StoredPath", intsSketch_StoredPath) :
                new ObjectParameter("IntsSketch_StoredPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FieldReportCase_InsertUpdate", caseIdParameter, driverSig_URLParameter, supervisorSig_URLParameter, driverSign_TimeParameter, supervisorScene_ResponseParameter, safetyOfficerScene_ReponseParameter, safetyOfficerSig_URLParameter, photoTakenParameter, weatherConditionParameter, accidentDescParameter, photo_StoredpathParameter, intsSketch_StoredPathParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Occupants_InsertUpdate(Nullable<int> occupantId, Nullable<int> caseId, string occupantName, string occupantsAddress, Nullable<int> age, Nullable<int> sex)
        {
            var occupantIdParameter = occupantId.HasValue ?
                new ObjectParameter("OccupantId", occupantId) :
                new ObjectParameter("OccupantId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var occupantNameParameter = occupantName != null ?
                new ObjectParameter("OccupantName", occupantName) :
                new ObjectParameter("OccupantName", typeof(string));
    
            var occupantsAddressParameter = occupantsAddress != null ?
                new ObjectParameter("OccupantsAddress", occupantsAddress) :
                new ObjectParameter("OccupantsAddress", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Occupants_InsertUpdate", occupantIdParameter, caseIdParameter, occupantNameParameter, occupantsAddressParameter, ageParameter, sexParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Vehicles_InsertUpdate(Nullable<int> vehicleId, Nullable<int> caseId, Nullable<int> cityDriver, string cityPermitNo, string driverName, string vehicleTag, string driverAddress)
        {
            var vehicleIdParameter = vehicleId.HasValue ?
                new ObjectParameter("VehicleId", vehicleId) :
                new ObjectParameter("VehicleId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var cityDriverParameter = cityDriver.HasValue ?
                new ObjectParameter("CityDriver", cityDriver) :
                new ObjectParameter("CityDriver", typeof(int));
    
            var cityPermitNoParameter = cityPermitNo != null ?
                new ObjectParameter("CityPermitNo", cityPermitNo) :
                new ObjectParameter("CityPermitNo", typeof(string));
    
            var driverNameParameter = driverName != null ?
                new ObjectParameter("DriverName", driverName) :
                new ObjectParameter("DriverName", typeof(string));
    
            var vehicleTagParameter = vehicleTag != null ?
                new ObjectParameter("VehicleTag", vehicleTag) :
                new ObjectParameter("VehicleTag", typeof(string));
    
            var driverAddressParameter = driverAddress != null ?
                new ObjectParameter("DriverAddress", driverAddress) :
                new ObjectParameter("DriverAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Vehicles_InsertUpdate", vehicleIdParameter, caseIdParameter, cityDriverParameter, cityPermitNoParameter, driverNameParameter, vehicleTagParameter, driverAddressParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Witnesses_InsertUpdate(Nullable<int> witnessId, Nullable<int> caseId, string witnessName, string witnessPhone, string witnessAddress)
        {
            var witnessIdParameter = witnessId.HasValue ?
                new ObjectParameter("WitnessId", witnessId) :
                new ObjectParameter("WitnessId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var witnessNameParameter = witnessName != null ?
                new ObjectParameter("WitnessName", witnessName) :
                new ObjectParameter("WitnessName", typeof(string));
    
            var witnessPhoneParameter = witnessPhone != null ?
                new ObjectParameter("WitnessPhone", witnessPhone) :
                new ObjectParameter("WitnessPhone", typeof(string));
    
            var witnessAddressParameter = witnessAddress != null ?
                new ObjectParameter("WitnessAddress", witnessAddress) :
                new ObjectParameter("WitnessAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Witnesses_InsertUpdate", witnessIdParameter, caseIdParameter, witnessNameParameter, witnessPhoneParameter, witnessAddressParameter);
        }
    }
}
