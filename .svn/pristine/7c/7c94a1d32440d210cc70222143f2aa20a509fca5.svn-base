using FieldTool.Adapters;
using FieldToolServices;
using FieldToolServices.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Net.Http.Formatting;
using System.Web.Http;
using DPWLogSystem;
using System.Configuration;
using FieldTool.Models;

namespace FieldTool.Controllers
{
    public class ReportAccessController : ApiController
    {
        private DPWLogger dpwLogger;

        [HttpGet]
        public reportFormDataPost getReportFormbyCaseId(int caseId)
        {
            reportFormDataPost res = new reportFormDataPost();
            reportFormData frm = new reportFormData();
            FormDataAccess ds = new FormDataAccess();
            frm = ds.getReportFormbyCaseId(caseId);
            res = Form2Report.setFormDatafromService(frm);

            return res;
        }

        [HttpGet]
        public List<MVAR_AccidentReport> getReportForms()
        {

            List<MVAR_AccidentReport> accidents = new List<MVAR_AccidentReport>();
            FormDataAccess ds = new FormDataAccess();
            accidents = ds.getReportForms();
            DPWLogger.Config();
            DPWLogger.SetLogingLevel(ConfigurationManager.AppSettings["LoggerLevel"]);

            dpwLogger = new DPWLogger("MyLog");    

          
            dpwLogger.Info("Get all report forms");
            return accidents;
        }

        [HttpPost]
        public int AddReportForm([FromBody]FormDataCollection form)
        {
            FormDataAccess ds = new FormDataAccess();
            reportFormData formData = new reportFormData();
            formData = Form2Report.convert2ReportData(form,1);
            int invetigationId = ds.AddReportForm(formData);
            return invetigationId;
        }

        [HttpPost]
        public int UpdateReportForm([FromBody]FormDataCollection form)
        {
            FormDataAccess ds = new FormDataAccess();
            reportFormData formData = new reportFormData();
            formData = Form2Report.convert2ReportData(form,2);
            int invetigationId = ds.UpdateReportForm(formData);
            return invetigationId;
        }

        [HttpDelete]
        public int delAccidentReport(int caseId)
        {
            FormDataAccess ds = new FormDataAccess();
            int invetigationId = ds.closeAccidentReport(caseId);
            return invetigationId;
        }

    }
}
