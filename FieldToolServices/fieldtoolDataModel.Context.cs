//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FieldToolServices
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DPW_MVAREntities : DbContext
    {
        public DPW_MVAREntities()
            : base("name=DPW_MVAREntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MVAR_AccidentReport> MVAR_AccidentReport { get; set; }
        public virtual DbSet<MVAR_Charges> MVAR_Charges { get; set; }
        public virtual DbSet<MVAR_Occupants> MVAR_Occupants { get; set; }
        public virtual DbSet<MVAR_Vehicles> MVAR_Vehicles { get; set; }
        public virtual DbSet<MVAR_Witnesses> MVAR_Witnesses { get; set; }
    
        public virtual ObjectResult<Nullable<int>> FieldReportCase_Delete(Nullable<int> caseId)
        {
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FieldReportCase_Delete", caseIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MVARCharges_InsertUpdate(Nullable<int> actionType, Nullable<int> chargeId, Nullable<int> caseId, Nullable<int> cityEmpl_Charge, Nullable<decimal> charge, Nullable<int> summons_No, Nullable<System.DateTime> trial_time)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(int));
    
            var chargeIdParameter = chargeId.HasValue ?
                new ObjectParameter("ChargeId", chargeId) :
                new ObjectParameter("ChargeId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var cityEmpl_ChargeParameter = cityEmpl_Charge.HasValue ?
                new ObjectParameter("CityEmpl_Charge", cityEmpl_Charge) :
                new ObjectParameter("CityEmpl_Charge", typeof(int));
    
            var chargeParameter = charge.HasValue ?
                new ObjectParameter("Charge", charge) :
                new ObjectParameter("Charge", typeof(decimal));
    
            var summons_NoParameter = summons_No.HasValue ?
                new ObjectParameter("Summons_No", summons_No) :
                new ObjectParameter("Summons_No", typeof(int));
    
            var trial_timeParameter = trial_time.HasValue ?
                new ObjectParameter("trial_time", trial_time) :
                new ObjectParameter("trial_time", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MVARCharges_InsertUpdate", actionTypeParameter, chargeIdParameter, caseIdParameter, cityEmpl_ChargeParameter, chargeParameter, summons_NoParameter, trial_timeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MVAROccupants_InsertUpdate(Nullable<int> actionType, Nullable<int> occupantId, Nullable<int> caseId, string occupant_FirstName, string occupant_MiddleName, string occupant_LastName, string occupantAddress, string occupant_ExtentInjury, string occupant_DriverPassenger, Nullable<int> vehicle_Number, string occupant_Pedestrian, string occupant_Injuerynature, string occupant_RemovedBy, Nullable<int> age, Nullable<int> sex)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(int));
    
            var occupantIdParameter = occupantId.HasValue ?
                new ObjectParameter("OccupantId", occupantId) :
                new ObjectParameter("OccupantId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var occupant_FirstNameParameter = occupant_FirstName != null ?
                new ObjectParameter("Occupant_FirstName", occupant_FirstName) :
                new ObjectParameter("Occupant_FirstName", typeof(string));
    
            var occupant_MiddleNameParameter = occupant_MiddleName != null ?
                new ObjectParameter("Occupant_MiddleName", occupant_MiddleName) :
                new ObjectParameter("Occupant_MiddleName", typeof(string));
    
            var occupant_LastNameParameter = occupant_LastName != null ?
                new ObjectParameter("Occupant_LastName", occupant_LastName) :
                new ObjectParameter("Occupant_LastName", typeof(string));
    
            var occupantAddressParameter = occupantAddress != null ?
                new ObjectParameter("OccupantAddress", occupantAddress) :
                new ObjectParameter("OccupantAddress", typeof(string));
    
            var occupant_ExtentInjuryParameter = occupant_ExtentInjury != null ?
                new ObjectParameter("Occupant_ExtentInjury", occupant_ExtentInjury) :
                new ObjectParameter("Occupant_ExtentInjury", typeof(string));
    
            var occupant_DriverPassengerParameter = occupant_DriverPassenger != null ?
                new ObjectParameter("Occupant_DriverPassenger", occupant_DriverPassenger) :
                new ObjectParameter("Occupant_DriverPassenger", typeof(string));
    
            var vehicle_NumberParameter = vehicle_Number.HasValue ?
                new ObjectParameter("Vehicle_Number", vehicle_Number) :
                new ObjectParameter("Vehicle_Number", typeof(int));
    
            var occupant_PedestrianParameter = occupant_Pedestrian != null ?
                new ObjectParameter("Occupant_Pedestrian", occupant_Pedestrian) :
                new ObjectParameter("Occupant_Pedestrian", typeof(string));
    
            var occupant_InjuerynatureParameter = occupant_Injuerynature != null ?
                new ObjectParameter("Occupant_Injuerynature", occupant_Injuerynature) :
                new ObjectParameter("Occupant_Injuerynature", typeof(string));
    
            var occupant_RemovedByParameter = occupant_RemovedBy != null ?
                new ObjectParameter("Occupant_RemovedBy", occupant_RemovedBy) :
                new ObjectParameter("Occupant_RemovedBy", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var sexParameter = sex.HasValue ?
                new ObjectParameter("Sex", sex) :
                new ObjectParameter("Sex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MVAROccupants_InsertUpdate", actionTypeParameter, occupantIdParameter, caseIdParameter, occupant_FirstNameParameter, occupant_MiddleNameParameter, occupant_LastNameParameter, occupantAddressParameter, occupant_ExtentInjuryParameter, occupant_DriverPassengerParameter, vehicle_NumberParameter, occupant_PedestrianParameter, occupant_InjuerynatureParameter, occupant_RemovedByParameter, ageParameter, sexParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MVARReportCase_InsertUpdate(Nullable<int> actionType, Nullable<int> caseId, string caseNumber, string caseOwner, Nullable<int> caseStatus, Nullable<System.DateTime> createDate, Nullable<System.DateTime> lastEditDate, string cSR_Number, byte[] driverSig, byte[] supervisorSig, byte[] safetyOfficerSig, Nullable<System.DateTime> driverSign_Time, Nullable<System.DateTime> supervisorSig_Time, Nullable<System.DateTime> safetyOfficerSig_Time, Nullable<int> supervisorScene_Response, Nullable<int> safetyOfficerScene_Reponse, Nullable<int> photoTaken, Nullable<int> seatbelt_InUse, Nullable<int> pCD_Driver_Perm, Nullable<int> pCD_InUse, Nullable<System.DateTime> control1Call_Time, Nullable<System.DateTime> accidentTime, string policeReport_Number, string accidentLocation, string weatherCondition, Nullable<int> vehiclesInvolved_Number, Nullable<int> police_Investigation, Nullable<int> pedestrian_Involved, string accidentDesc, byte[] intsSketch)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var caseNumberParameter = caseNumber != null ?
                new ObjectParameter("CaseNumber", caseNumber) :
                new ObjectParameter("CaseNumber", typeof(string));
    
            var caseOwnerParameter = caseOwner != null ?
                new ObjectParameter("CaseOwner", caseOwner) :
                new ObjectParameter("CaseOwner", typeof(string));
    
            var caseStatusParameter = caseStatus.HasValue ?
                new ObjectParameter("CaseStatus", caseStatus) :
                new ObjectParameter("CaseStatus", typeof(int));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var lastEditDateParameter = lastEditDate.HasValue ?
                new ObjectParameter("LastEditDate", lastEditDate) :
                new ObjectParameter("LastEditDate", typeof(System.DateTime));
    
            var cSR_NumberParameter = cSR_Number != null ?
                new ObjectParameter("CSR_Number", cSR_Number) :
                new ObjectParameter("CSR_Number", typeof(string));
    
            var driverSigParameter = driverSig != null ?
                new ObjectParameter("DriverSig", driverSig) :
                new ObjectParameter("DriverSig", typeof(byte[]));
    
            var supervisorSigParameter = supervisorSig != null ?
                new ObjectParameter("SupervisorSig", supervisorSig) :
                new ObjectParameter("SupervisorSig", typeof(byte[]));
    
            var safetyOfficerSigParameter = safetyOfficerSig != null ?
                new ObjectParameter("SafetyOfficerSig", safetyOfficerSig) :
                new ObjectParameter("SafetyOfficerSig", typeof(byte[]));
    
            var driverSign_TimeParameter = driverSign_Time.HasValue ?
                new ObjectParameter("DriverSign_Time", driverSign_Time) :
                new ObjectParameter("DriverSign_Time", typeof(System.DateTime));
    
            var supervisorSig_TimeParameter = supervisorSig_Time.HasValue ?
                new ObjectParameter("SupervisorSig_Time", supervisorSig_Time) :
                new ObjectParameter("SupervisorSig_Time", typeof(System.DateTime));
    
            var safetyOfficerSig_TimeParameter = safetyOfficerSig_Time.HasValue ?
                new ObjectParameter("SafetyOfficerSig_Time", safetyOfficerSig_Time) :
                new ObjectParameter("SafetyOfficerSig_Time", typeof(System.DateTime));
    
            var supervisorScene_ResponseParameter = supervisorScene_Response.HasValue ?
                new ObjectParameter("SupervisorScene_Response", supervisorScene_Response) :
                new ObjectParameter("SupervisorScene_Response", typeof(int));
    
            var safetyOfficerScene_ReponseParameter = safetyOfficerScene_Reponse.HasValue ?
                new ObjectParameter("SafetyOfficerScene_Reponse", safetyOfficerScene_Reponse) :
                new ObjectParameter("SafetyOfficerScene_Reponse", typeof(int));
    
            var photoTakenParameter = photoTaken.HasValue ?
                new ObjectParameter("PhotoTaken", photoTaken) :
                new ObjectParameter("PhotoTaken", typeof(int));
    
            var seatbelt_InUseParameter = seatbelt_InUse.HasValue ?
                new ObjectParameter("Seatbelt_InUse", seatbelt_InUse) :
                new ObjectParameter("Seatbelt_InUse", typeof(int));
    
            var pCD_Driver_PermParameter = pCD_Driver_Perm.HasValue ?
                new ObjectParameter("PCD_Driver_Perm", pCD_Driver_Perm) :
                new ObjectParameter("PCD_Driver_Perm", typeof(int));
    
            var pCD_InUseParameter = pCD_InUse.HasValue ?
                new ObjectParameter("PCD_InUse", pCD_InUse) :
                new ObjectParameter("PCD_InUse", typeof(int));
    
            var control1Call_TimeParameter = control1Call_Time.HasValue ?
                new ObjectParameter("Control1Call_Time", control1Call_Time) :
                new ObjectParameter("Control1Call_Time", typeof(System.DateTime));
    
            var accidentTimeParameter = accidentTime.HasValue ?
                new ObjectParameter("AccidentTime", accidentTime) :
                new ObjectParameter("AccidentTime", typeof(System.DateTime));
    
            var policeReport_NumberParameter = policeReport_Number != null ?
                new ObjectParameter("PoliceReport_Number", policeReport_Number) :
                new ObjectParameter("PoliceReport_Number", typeof(string));
    
            var accidentLocationParameter = accidentLocation != null ?
                new ObjectParameter("AccidentLocation", accidentLocation) :
                new ObjectParameter("AccidentLocation", typeof(string));
    
            var weatherConditionParameter = weatherCondition != null ?
                new ObjectParameter("WeatherCondition", weatherCondition) :
                new ObjectParameter("WeatherCondition", typeof(string));
    
            var vehiclesInvolved_NumberParameter = vehiclesInvolved_Number.HasValue ?
                new ObjectParameter("VehiclesInvolved_Number", vehiclesInvolved_Number) :
                new ObjectParameter("VehiclesInvolved_Number", typeof(int));
    
            var police_InvestigationParameter = police_Investigation.HasValue ?
                new ObjectParameter("Police_Investigation", police_Investigation) :
                new ObjectParameter("Police_Investigation", typeof(int));
    
            var pedestrian_InvolvedParameter = pedestrian_Involved.HasValue ?
                new ObjectParameter("Pedestrian_Involved", pedestrian_Involved) :
                new ObjectParameter("Pedestrian_Involved", typeof(int));
    
            var accidentDescParameter = accidentDesc != null ?
                new ObjectParameter("AccidentDesc", accidentDesc) :
                new ObjectParameter("AccidentDesc", typeof(string));
    
            var intsSketchParameter = intsSketch != null ?
                new ObjectParameter("IntsSketch", intsSketch) :
                new ObjectParameter("IntsSketch", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MVARReportCase_InsertUpdate", actionTypeParameter, caseIdParameter, caseNumberParameter, caseOwnerParameter, caseStatusParameter, createDateParameter, lastEditDateParameter, cSR_NumberParameter, driverSigParameter, supervisorSigParameter, safetyOfficerSigParameter, driverSign_TimeParameter, supervisorSig_TimeParameter, safetyOfficerSig_TimeParameter, supervisorScene_ResponseParameter, safetyOfficerScene_ReponseParameter, photoTakenParameter, seatbelt_InUseParameter, pCD_Driver_PermParameter, pCD_InUseParameter, control1Call_TimeParameter, accidentTimeParameter, policeReport_NumberParameter, accidentLocationParameter, weatherConditionParameter, vehiclesInvolved_NumberParameter, police_InvestigationParameter, pedestrian_InvolvedParameter, accidentDescParameter, intsSketchParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MVARVehicles_InsertUpdate(Nullable<int> actionType, Nullable<int> vehicleId, Nullable<int> caseId, Nullable<int> cityDriver, string driverLicense_Number, string cityPermitNo, string driver_FirstName, string driver_MiddleName, string driver_lastName, string driver_Sex, Nullable<System.DateTime> driver_DOB, Nullable<int> driver_Homephone, Nullable<int> driver_CDL, Nullable<int> driver_POST, string driver_Address, string driver_City, string driver_State, string driver_County, Nullable<int> driver_Zipcode, string driver_Agency, string driver_Bureau, string driver_BusinessPhone, string vehicle_pointImpact, string vehicle_ExtDamage, string fleet_ShopNumber, string vehicle_Yearmake, string vehicle_SerialNumber, string vehicleTag, string vehicleYear, string vehicleState, string otherSpecify, string owner_Name, string owner_Address, Nullable<int> owner_Phone, string owner_InsuranceCom, string owner_PolicyNo, Nullable<System.DateTime> driver_ExpDate, string driver_VehicleState)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(int));
    
            var vehicleIdParameter = vehicleId.HasValue ?
                new ObjectParameter("VehicleId", vehicleId) :
                new ObjectParameter("VehicleId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var cityDriverParameter = cityDriver.HasValue ?
                new ObjectParameter("CityDriver", cityDriver) :
                new ObjectParameter("CityDriver", typeof(int));
    
            var driverLicense_NumberParameter = driverLicense_Number != null ?
                new ObjectParameter("DriverLicense_Number", driverLicense_Number) :
                new ObjectParameter("DriverLicense_Number", typeof(string));
    
            var cityPermitNoParameter = cityPermitNo != null ?
                new ObjectParameter("CityPermitNo", cityPermitNo) :
                new ObjectParameter("CityPermitNo", typeof(string));
    
            var driver_FirstNameParameter = driver_FirstName != null ?
                new ObjectParameter("Driver_FirstName", driver_FirstName) :
                new ObjectParameter("Driver_FirstName", typeof(string));
    
            var driver_MiddleNameParameter = driver_MiddleName != null ?
                new ObjectParameter("Driver_MiddleName", driver_MiddleName) :
                new ObjectParameter("Driver_MiddleName", typeof(string));
    
            var driver_lastNameParameter = driver_lastName != null ?
                new ObjectParameter("Driver_lastName", driver_lastName) :
                new ObjectParameter("Driver_lastName", typeof(string));
    
            var driver_SexParameter = driver_Sex != null ?
                new ObjectParameter("Driver_Sex", driver_Sex) :
                new ObjectParameter("Driver_Sex", typeof(string));
    
            var driver_DOBParameter = driver_DOB.HasValue ?
                new ObjectParameter("Driver_DOB", driver_DOB) :
                new ObjectParameter("Driver_DOB", typeof(System.DateTime));
    
            var driver_HomephoneParameter = driver_Homephone.HasValue ?
                new ObjectParameter("Driver_Homephone", driver_Homephone) :
                new ObjectParameter("Driver_Homephone", typeof(int));
    
            var driver_CDLParameter = driver_CDL.HasValue ?
                new ObjectParameter("Driver_CDL", driver_CDL) :
                new ObjectParameter("Driver_CDL", typeof(int));
    
            var driver_POSTParameter = driver_POST.HasValue ?
                new ObjectParameter("Driver_POST", driver_POST) :
                new ObjectParameter("Driver_POST", typeof(int));
    
            var driver_AddressParameter = driver_Address != null ?
                new ObjectParameter("Driver_Address", driver_Address) :
                new ObjectParameter("Driver_Address", typeof(string));
    
            var driver_CityParameter = driver_City != null ?
                new ObjectParameter("Driver_City", driver_City) :
                new ObjectParameter("Driver_City", typeof(string));
    
            var driver_StateParameter = driver_State != null ?
                new ObjectParameter("Driver_State", driver_State) :
                new ObjectParameter("Driver_State", typeof(string));
    
            var driver_CountyParameter = driver_County != null ?
                new ObjectParameter("Driver_County", driver_County) :
                new ObjectParameter("Driver_County", typeof(string));
    
            var driver_ZipcodeParameter = driver_Zipcode.HasValue ?
                new ObjectParameter("Driver_Zipcode", driver_Zipcode) :
                new ObjectParameter("Driver_Zipcode", typeof(int));
    
            var driver_AgencyParameter = driver_Agency != null ?
                new ObjectParameter("Driver_Agency", driver_Agency) :
                new ObjectParameter("Driver_Agency", typeof(string));
    
            var driver_BureauParameter = driver_Bureau != null ?
                new ObjectParameter("Driver_Bureau", driver_Bureau) :
                new ObjectParameter("Driver_Bureau", typeof(string));
    
            var driver_BusinessPhoneParameter = driver_BusinessPhone != null ?
                new ObjectParameter("Driver_BusinessPhone", driver_BusinessPhone) :
                new ObjectParameter("Driver_BusinessPhone", typeof(string));
    
            var vehicle_pointImpactParameter = vehicle_pointImpact != null ?
                new ObjectParameter("Vehicle_pointImpact", vehicle_pointImpact) :
                new ObjectParameter("Vehicle_pointImpact", typeof(string));
    
            var vehicle_ExtDamageParameter = vehicle_ExtDamage != null ?
                new ObjectParameter("Vehicle_ExtDamage", vehicle_ExtDamage) :
                new ObjectParameter("Vehicle_ExtDamage", typeof(string));
    
            var fleet_ShopNumberParameter = fleet_ShopNumber != null ?
                new ObjectParameter("Fleet_ShopNumber", fleet_ShopNumber) :
                new ObjectParameter("Fleet_ShopNumber", typeof(string));
    
            var vehicle_YearmakeParameter = vehicle_Yearmake != null ?
                new ObjectParameter("Vehicle_Yearmake", vehicle_Yearmake) :
                new ObjectParameter("Vehicle_Yearmake", typeof(string));
    
            var vehicle_SerialNumberParameter = vehicle_SerialNumber != null ?
                new ObjectParameter("Vehicle_SerialNumber", vehicle_SerialNumber) :
                new ObjectParameter("Vehicle_SerialNumber", typeof(string));
    
            var vehicleTagParameter = vehicleTag != null ?
                new ObjectParameter("VehicleTag", vehicleTag) :
                new ObjectParameter("VehicleTag", typeof(string));
    
            var vehicleYearParameter = vehicleYear != null ?
                new ObjectParameter("VehicleYear", vehicleYear) :
                new ObjectParameter("VehicleYear", typeof(string));
    
            var vehicleStateParameter = vehicleState != null ?
                new ObjectParameter("VehicleState", vehicleState) :
                new ObjectParameter("VehicleState", typeof(string));
    
            var otherSpecifyParameter = otherSpecify != null ?
                new ObjectParameter("OtherSpecify", otherSpecify) :
                new ObjectParameter("OtherSpecify", typeof(string));
    
            var owner_NameParameter = owner_Name != null ?
                new ObjectParameter("Owner_Name", owner_Name) :
                new ObjectParameter("Owner_Name", typeof(string));
    
            var owner_AddressParameter = owner_Address != null ?
                new ObjectParameter("Owner_Address", owner_Address) :
                new ObjectParameter("Owner_Address", typeof(string));
    
            var owner_PhoneParameter = owner_Phone.HasValue ?
                new ObjectParameter("Owner_Phone", owner_Phone) :
                new ObjectParameter("Owner_Phone", typeof(int));
    
            var owner_InsuranceComParameter = owner_InsuranceCom != null ?
                new ObjectParameter("Owner_InsuranceCom", owner_InsuranceCom) :
                new ObjectParameter("Owner_InsuranceCom", typeof(string));
    
            var owner_PolicyNoParameter = owner_PolicyNo != null ?
                new ObjectParameter("Owner_PolicyNo", owner_PolicyNo) :
                new ObjectParameter("Owner_PolicyNo", typeof(string));
    
            var driver_ExpDateParameter = driver_ExpDate.HasValue ?
                new ObjectParameter("Driver_ExpDate", driver_ExpDate) :
                new ObjectParameter("Driver_ExpDate", typeof(System.DateTime));
    
            var driver_VehicleStateParameter = driver_VehicleState != null ?
                new ObjectParameter("Driver_VehicleState", driver_VehicleState) :
                new ObjectParameter("Driver_VehicleState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MVARVehicles_InsertUpdate", actionTypeParameter, vehicleIdParameter, caseIdParameter, cityDriverParameter, driverLicense_NumberParameter, cityPermitNoParameter, driver_FirstNameParameter, driver_MiddleNameParameter, driver_lastNameParameter, driver_SexParameter, driver_DOBParameter, driver_HomephoneParameter, driver_CDLParameter, driver_POSTParameter, driver_AddressParameter, driver_CityParameter, driver_StateParameter, driver_CountyParameter, driver_ZipcodeParameter, driver_AgencyParameter, driver_BureauParameter, driver_BusinessPhoneParameter, vehicle_pointImpactParameter, vehicle_ExtDamageParameter, fleet_ShopNumberParameter, vehicle_YearmakeParameter, vehicle_SerialNumberParameter, vehicleTagParameter, vehicleYearParameter, vehicleStateParameter, otherSpecifyParameter, owner_NameParameter, owner_AddressParameter, owner_PhoneParameter, owner_InsuranceComParameter, owner_PolicyNoParameter, driver_ExpDateParameter, driver_VehicleStateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> MVARWitnesses_InsertUpdate(Nullable<int> actionType, Nullable<int> witnessId, Nullable<int> caseId, string witnessName, string witnessPhone, string witnessAddress)
        {
            var actionTypeParameter = actionType.HasValue ?
                new ObjectParameter("ActionType", actionType) :
                new ObjectParameter("ActionType", typeof(int));
    
            var witnessIdParameter = witnessId.HasValue ?
                new ObjectParameter("WitnessId", witnessId) :
                new ObjectParameter("WitnessId", typeof(int));
    
            var caseIdParameter = caseId.HasValue ?
                new ObjectParameter("CaseId", caseId) :
                new ObjectParameter("CaseId", typeof(int));
    
            var witnessNameParameter = witnessName != null ?
                new ObjectParameter("WitnessName", witnessName) :
                new ObjectParameter("WitnessName", typeof(string));
    
            var witnessPhoneParameter = witnessPhone != null ?
                new ObjectParameter("WitnessPhone", witnessPhone) :
                new ObjectParameter("WitnessPhone", typeof(string));
    
            var witnessAddressParameter = witnessAddress != null ?
                new ObjectParameter("WitnessAddress", witnessAddress) :
                new ObjectParameter("WitnessAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("MVARWitnesses_InsertUpdate", actionTypeParameter, witnessIdParameter, caseIdParameter, witnessNameParameter, witnessPhoneParameter, witnessAddressParameter);
        }
    }
}
